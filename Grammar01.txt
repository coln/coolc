Grammar
=======
S -> A
A -> int + A | int

First/Follow
============
First(S) = First(A)
Follow(S) = { $ }
First(A) = { int }
Follow(A) = { $ }
Follow(int) = { +, $ }
Follow("+") = { int }

States
======
[0] S -> .A
    A -> .int + A
    A -> .int
[1] S -> A. (ACCEPT)
[2] A -> int. + A
    A -> int.
 [3] A -> int +. A
     A -> .int + A
     A -> .int
  [4] A -> int + A.

Action Table
=============
// A = accept
// x = error
// s# = shift to state #
// r = reduce
      | next
state |  A    +   int  $   S
------+-----------------------------------------------
   0  |  s1   x   s2   A   A
   1  |  x    x   x    r
   2  |  x    s3  x    r
   3  |  s4   x   s2   x
   4  |  x    x   x    r

Reduce Table
=============
// Format: #/Symbol
// # = # to reduce by
// Symbol = symbol to replace by
      | next
state |  $
------+-------------
   0  |  x
   1  |  1/S
   2  |  1/A
   3  |  x
   4  |  3/A
